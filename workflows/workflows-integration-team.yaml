main:
    params: [args]
    steps:
    - declare_input:
        assign:
          - bomResults: []
          - jsonInput: >
              {
                "data": [
                    "fwo/IDW60901/IDW60901.94610.json",
                    "fwo/IDW60901/IDW60901.94608.json",
                    "fwo/IDN60901/IDN60901.95765.json",
                    "fwo/IDQ60901/IDQ60901.94580.json",
                    "fwo/IDQ60901/IDQ60901.94592.json",
                    "fwo/IDQ60801/IDQ60801.94287.json",
                    "fwo/IDV60901/IDV60901.94870.json",
                    "fwo/IDN60801/IDN60801.95745.json",
                    "fwo/IDN60801/IDN60801.94768.json",
                    "fwo/IDN60801/IDN60801.94763.json",
                    "fwo/IDN60801/IDN60801.94766.json",
                    "fwo/IDN60801/IDN60801.94759.json",
                    "fwo/IDQ60901/IDQ60901.94576.json",
                    "fwo/IDQ60901/IDQ60901.94578.json",
                    "fwo/IDV60901/IDV60901.95867.json",
                    "fwo/IDV60901/IDV60901.95866.json",
                    "fwo/IDV60901/IDV60901.94857.json",
                    "fwo/IDV60901/IDV60901.94854.json",
                    "fwo/IDN60801/IDN60801.94774.json",
                    "fwo/IDN60801/IDN60801.95771.json",
                    "fwo/IDN60903/IDN60903.94926.json",
                    "fwo/IDS60901/IDS60901.94672.json",
                    "fwo/IDN60801/IDN60801.94767.json"
                ]
              }
    - parseToJsonObject:
        call: json.decode
        args:
          data: ${jsonInput} 
        result: bomUrls
    - queryResult:
        for:
          value: bomUrl
          index: counter
          in: ${bomUrls.data}
          steps:
            - queryBomUrl:
                try:
                  call: http.get
                  args:
                    url: ${"https://australia-southeast1-scg-udp-etl-dev.cloudfunctions.net/get_BOM_Data/" + bomUrl}
                    headers: 
                      User-Agent: ${"workflows-" + text.substring(string(sys.now()), 8, 13) }
                  result: bomResult
                retry: ${http.default_retry}
            - addToResults:
                assign:
                  - bomResults: ${list.concat(bomResults, bomResult)}
            - logResult:
                call: sys.log
                args:
                  data: ${bomResults}
            - sleepNow:
                call: sys.sleep
                args:
                  seconds: 1
    - returnResult:
        return: ${bomResults}